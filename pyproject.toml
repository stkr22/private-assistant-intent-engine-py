[build-system]
requires = ["uv_build>=0.9.5,<0.10.0"]
build-backend = "uv_build"

[project]
name = "private-assistant-intent-engine"
version = "1.0.2"
description = "Intent engine for the private assistant ecosystem"
authors = [
    { name = "stkr22", email = "stkr22@github.com" }
]
readme = "README.md"
license = "GPL-3.0"
license-files = [
    "LICENSE",
]

keywords = []
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Text Processing :: General",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

requires-python = ">=3.12,<3.14"
dependencies = [
    "private-assistant-commons~=5.2.2",
    "spacy~=3.8.7",
    "pydantic~=2.9.2",
    "aiomqtt~=2.4.0",
    "en-core-web-md",
    "text2num~=3.0.0",
    "pydantic-settings>=2.11.0",
]

[tool.uv.sources]
en-core-web-md = { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_md-3.8.0/en_core_web_md-3.8.0-py3-none-any.whl" }

[project.urls]
Homepage = "https://github.com/stkr22/private-assistant-intent-engine-py"
Repository = "https://github.com/stkr22/private-assistant-intent-engine-py"
Documentation = "https://github.com/stkr22/private-assistant-intent-engine-py/tree/main/docs"
Issues = "https://github.com/stkr22/private-assistant-intent-engine-py/issues"
Changelog = "https://github.com/stkr22/private-assistant-intent-engine-py/blob/main/CHANGELOG.md"

[dependency-groups]
dev = [
    "ruff~=0.14.1",
    "mypy~=1.18.2",
    "pytest~=8.4.1",
    "pytest-cov~=7.0.0",
    "types-pyyaml~=6.0.12.20240311",
    "coverage[toml]~=7.6.0",
    "pytest-asyncio~=0.26.0",
    "pytest-xdist~=3.8.0",
]

[project.scripts]
private-assistant-intent-engine = "private_assistant_intent_engine.main:app"

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PL",   # pylint
    "RUF",  # ruff-specific rules
    "TCH",  # flake8-type-checking
]
ignore = ["E203"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q -n auto"

[tool.coverage.run]
source = ["private_assistant_intent_engine"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "scm"
update_changelog_on_bump = true
